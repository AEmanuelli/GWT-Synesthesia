GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [1]

  | Name          | Type                  | Params | Mode
----------------------------------------------------------------
0 | gw_mod        | GWModule              | 6.3 M  | train
1 | selection_mod | SingleDomainSelection | 0      | train
2 | loss_mod      | GWLosses2Domains      | 6.3 M  | train
----------------------------------------------------------------
485 K     Trainable params
5.8 M     Non-trainable params
6.3 M     Total params
25.260    Total estimated model params size (MB)
43        Modules in train mode
35        Modules in eval mode
Epoch 30:  37%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ                                                 | 91/243 [00:11<00:19,  7.92it/s, v_num=e2f2]
                                                                                                                                           
[34m[1mwandb[0m: [33mWARNING[0m Fatal error while uploading data. Some run data will not be synced, but it will still be written to disk. Use `wandb sync` at the end of the run to try uploading.

Detected KeyboardInterrupt, attempting graceful shutdown ...
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7f2fbed0c4a0>
Traceback (most recent call last):
  File "/home/alexis/miniconda3/envs/conda_no_color/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/alexis/miniconda3/envs/conda_no_color/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/home/alexis/miniconda3/envs/conda_no_color/lib/python3.11/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/alexis/miniconda3/envs/conda_no_color/lib/python3.11/threading.py", line 1119, in join
    self._wait_for_tstate_lock()
  File "/home/alexis/miniconda3/envs/conda_no_color/lib/python3.11/threading.py", line 1139, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
