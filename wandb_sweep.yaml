program: wandb_sweep_NC.py
method: bayes
metric:
  name: val/loss
  goal: minimize
parameters:
  # Global workspace architecture
  global_workspace.latent_dim:
    values: [12]
  
  # Encoder parameters
  global_workspace.encoders.hidden_dim:
    values: [256]
  global_workspace.encoders.n_layers:
    values: [0, 1, 2, 3]
  
  # Decoder parameters
  global_workspace.decoders.hidden_dim:
    values: [256]
  global_workspace.decoders.n_layers:
    values: [0, 1, 2, 3]
  
  # Loss coefficients
  global_workspace.loss_coefficients.cycles:
    distribution: uniform
    min: 0.1
    max: 3.0
  global_workspace.loss_coefficients.contrastives:
    distribution: uniform
    min: 0.01
    max: 1.0
  global_workspace.loss_coefficients.demi_cycles:
    distribution: uniform
    min: 0.0
    max: 5
  global_workspace.loss_coefficients.translations:
    distribution: uniform
    min: 0.5
    max: 3.0
  
  # Optimizer parameters
  training.optim.lr:
    distribution: log_uniform_values
    min: 1e-5
    max: 1e-3
  training.optim.weight_decay:
    distribution: log_uniform_values
    min: 1e-6
    max: 1e-3
  training.optim.max_lr:
    distribution: log_uniform_values
    min: 1e-4
    max: 5e-3
  training.max_steps:
    values: [2599]
  
  # Custom hyperparameters
  my_hparams.temperature:
    distribution: uniform
    min: 0.01
    max: .9
  my_hparams.alpha:
    distribution: uniform
    min: 1
    max: 5

# Early stopping
early_terminate:
  type: hyperband
  min_iter: 1000
  eta: 3
  s: 2